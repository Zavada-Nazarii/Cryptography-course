import hashlib
import time

# –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å PoW ‚Äì –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω—É–ª—ñ–≤ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Ö–µ—à—É
DIFFICULTY = 5

# –•–µ—à-—Ñ—É–Ω–∫—Ü—ñ—è SHA-256 –¥–ª—è –±–ª–æ–∫—É
def calculate_hash(data, prev_hash, nonce):
    block_content = f"{data}{prev_hash}{nonce}".encode()
    return hashlib.sha256(block_content).hexdigest()

# –ö–ª–∞—Å –ë–ª–æ–∫—É
class Block:
    def __init__(self, data, prev_hash=""):
        self.data = data
        self.prev_hash = prev_hash
        self.nonce = 0
        self.hash = ""

# –ü—Ä–æ—Ü–µ—Å –º–∞–π–Ω—ñ–Ω–≥—É –±–ª–æ–∫—É ‚Äì Proof-of-Work
def mine_block(block, difficulty):
    prefix = '0' * difficulty
    nonce = 0
    while True:
        hash_attempt = calculate_hash(block.data, block.prev_hash, nonce)
        if hash_attempt.startswith(prefix):
            block.nonce = nonce
            block.hash = hash_attempt
            break
        nonce += 1

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫—É –¥–æ –±–ª–æ–∫—á–µ–π–Ω—É
def add_block(blockchain, data):
    prev_block = blockchain[-1]
    new_block = Block(data=data, prev_hash=prev_block.hash)
    print(f"–ú–∞–π–Ω—ñ–Ω–≥ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫—É –∑ –¥–∞–Ω–∏–º–∏: {data} ...")
    start_time = time.time()
    mine_block(new_block, DIFFICULTY)
    end_time = time.time()
    blockchain.append(new_block)
    print(f"‚úÖ –ë–ª–æ–∫ –¥–æ–¥–∞–Ω–æ: Hash={new_block.hash}, Nonce={new_block.nonce}, –ß–∞—Å –º–∞–π–Ω—ñ–Ω–≥—É={end_time - start_time:.2f} —Å–µ–∫\n")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–ª–æ–∫—á–µ–π–Ω—É
def create_blockchain(values):
    blockchain = []
    print("–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Genesis Block...")
    genesis_block = Block(data="Genesis", prev_hash="")
    mine_block(genesis_block, DIFFICULTY)
    blockchain.append(genesis_block)
    print(f"‚úÖ Genesis Block –¥–æ–¥–∞–Ω–æ: Hash={genesis_block.hash}, Nonce={genesis_block.nonce}\n")
    
    for value in values:
        add_block(blockchain, value)
    
    return blockchain

# –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
values = [91911, 90954, 95590, 97390, 96578, 97211, 95090]

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–ª–æ–∫—á–µ–π–Ω—É
blockchain = create_blockchain(values)

# –í–∏–≤—ñ–¥ –≤—Å—ñ—î—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
print("\nüì¶ –í–º—ñ—Å—Ç Blockchain:")
for i, block in enumerate(blockchain):
    print(f"–ë–ª–æ–∫ {i}:")
    print(f"  Data       : {block.data}")
    print(f"  Prev Hash  : {block.prev_hash}")
    print(f"  Nonce      : {block.nonce}")
    print(f"  Hash       : {block.hash}")
    print()

